version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: qdrant_admin_redis
    ports:
      - "6379:6379"
    networks:
      - app_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qdrant_admin_db
    environment:
      POSTGRES_DB: qdrant_admin
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d qdrant_admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qdrant_admin_backend
    environment:
      DATABASE_URL: postgresql://admin:admin123@postgres:5432/qdrant_admin
      REDIS_URL: redis://redis:6379
      QDRANT_URL: ${QDRANT_URL}
      QDRANT_API_KEY: ${QDRANT_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app_network
    restart: unless-stopped

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qdrant_admin_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://127.0.0.1:8000
      INTERNAL_API_URL: http://backend:8000
      DATABASE_URL: postgresql://admin:admin123@postgres:5432/qdrant_admin
      NEXTAUTH_SECRET: super-secret-key-for-development-only-change-in-production
      NEXTAUTH_URL: http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      backend:
        condition: service_started
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  app_network:
    driver: bridge