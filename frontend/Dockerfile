FROM node:18-alpine

WORKDIR /app

# Instalar depend√™ncias do sistema (OpenSSL, netcat, etc.)
RUN apk add --no-cache openssl libc6-compat netcat-openbsd

# Copiar package files
COPY package*.json ./

# Instalar depend√™ncias
RUN npm install

# Copiar c√≥digo
COPY . .

# Criar script de inicializa√ß√£o
RUN echo '#!/bin/sh' > /app/start.sh && \
    echo 'echo "üöÄ Starting Qdrant Admin Frontend..."' >> /app/start.sh && \
    echo 'echo "‚è≥ Waiting for PostgreSQL..."' >> /app/start.sh && \
    echo 'while ! nc -z postgres 5432; do sleep 1; done' >> /app/start.sh && \
    echo 'echo "‚úÖ PostgreSQL is ready!"' >> /app/start.sh && \
    echo 'echo "üìä Creating missing tables..."' >> /app/start.sh && \
    echo 'npx prisma db execute --file ./create-auth-tables.sql || echo "Tables may already exist"' >> /app/start.sh && \
    echo 'echo "üîß Generating Prisma client..."' >> /app/start.sh && \
    echo 'npx prisma generate' >> /app/start.sh && \
    echo 'echo "üéØ Starting Next.js application..."' >> /app/start.sh && \
    echo 'npm start' >> /app/start.sh && \
    chmod +x /app/start.sh

# Limpar cache e reinstalar para garantir compatibilidade
RUN npm ci

# Gerar Prisma client com vers√£o espec√≠fica
RUN npx prisma@5.7.0 generate

# Build da aplica√ß√£o
RUN npm run build

# Expor porta
EXPOSE 3000

# Comando para produ√ß√£o
CMD ["/app/start.sh"]